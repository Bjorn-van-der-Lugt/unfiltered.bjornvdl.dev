.fa-solid,
.fa-regular,
.fa-brands,
.fa-classic,
.fas,
.far,
.fab,
.fal,
.fat,
.fad,
.fadr,
.fadl,
.fadt,
.fass,
.fasr,
.fasl,
.fast,
.fasds,
.fasdr,
.fasdl,
.fasdt,
.faslr,
.faslpr,
.fawsb,
.fatl,
.fans,
.fands,
.faes,
.fajr,
.fajfr,
.fajdr,
.facr,
.fausb,
.faudsb,
.faufsb,
.fa-solid,
.fa-semibold,
.fa-regular,
.fa-light,
.fa-thin,
.fa-brands,
.fa-classic,
.fa-duotone,
.fa-sharp,
.fa-sharp-duotone,
.fa-chisel,
.fa-etch,
.fa-jelly,
.fa-jelly-duo,
.fa-jelly-fill,
.fa-notdog,
.fa-notdog-duo,
.fa-slab,
.fa-slab-press,
.fa-thumbprint,
.fa-utility,
.fa-utility-duo,
.fa-utility-fill,
.fa-whiteboard,
.fa {
  --_fa-family: var(--fa-family, var(--fa-style-family, "Font Awesome 7 Pro"));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: var(--fa-display, inline-block);
  font-family: var(--_fa-family);
  font-feature-settings: normal;
  font-style: normal;
  font-synthesis: none;
  font-variant: normal;
  font-weight: var(--fa-style, 900);
  line-height: 1;
  text-align: center;
  text-rendering: auto;
  width: var(--fa-width, 1.25em);
}

:is(.fas,
.fass,
.far,
.fasr,
.fal,
.fasl,
.fat,
.fast,
.fad,
.fadr,
.fadl,
.fadt,
.fasds,
.fasdr,
.fasdl,
.fasdt,
.fab,
.faslr,
.faslpr,
.fawsb,
.fatl,
.fans,
.fands,
.faes,
.fajr,
.fajfr,
.fajdr,
.facr,
.fausb,
.faudsb,
.faufsb,
.fa-solid,
.fa-semibold,
.fa-regular,
.fa-light,
.fa-thin,
.fa-brands,
.fa-classic,
.fa-duotone,
.fa-sharp,
.fa-sharp-duotone,
.fa-chisel,
.fa-etch,
.fa-jelly,
.fa-jelly-duo,
.fa-jelly-fill,
.fa-notdog,
.fa-notdog-duo,
.fa-slab,
.fa-slab-press,
.fa-thumbprint,
.fa-utility,
.fa-utility-duo,
.fa-utility-fill,
.fa-whiteboard,
.fa)::before {
  content: var(--fa)/"";
}

@supports not (content: ""/"") {
  :is(.fas,
  .fass,
  .far,
  .fasr,
  .fal,
  .fasl,
  .fat,
  .fast,
  .fad,
  .fadr,
  .fadl,
  .fadt,
  .fasds,
  .fasdr,
  .fasdl,
  .fasdt,
  .fab,
  .faslr,
  .faslpr,
  .fawsb,
  .fatl,
  .fans,
  .fands,
  .faes,
  .fajr,
  .fajfr,
  .fajdr,
  .facr,
  .fausb,
  .faudsb,
  .faufsb,
  .fa-solid,
  .fa-semibold,
  .fa-regular,
  .fa-light,
  .fa-thin,
  .fa-brands,
  .fa-classic,
  .fa-duotone,
  .fa-sharp,
  .fa-sharp-duotone,
  .fa-chisel,
  .fa-etch,
  .fa-jelly,
  .fa-jelly-duo,
  .fa-jelly-fill,
  .fa-notdog,
  .fa-notdog-duo,
  .fa-slab,
  .fa-slab-press,
  .fa-thumbprint,
  .fa-utility,
  .fa-utility-duo,
  .fa-utility-fill,
  .fa-whiteboard,
  .fa)::before {
    content: var(--fa);
  }
}
:is(.fad,
.fa-duotone,
.fadr,
.fadl,
.fadt,
.fasds,
.fa-sharp-duotone,
.fasdr,
.fasdl,
.fasdt,
.fatl,
.fa-thumbprint,
.fands,
.fa-notdog-duo,
.fajdr,
.fa-jelly-duo,
.faudsb,
.fa-utility-duo)::after {
  content: var(--fa);
  font-feature-settings: "ss01";
}

@supports not (content: ""/"") {
  :is(.fad,
  .fa-duotone,
  .fadr,
  .fadl,
  .fadt,
  .fasds,
  .fa-sharp-duotone,
  .fasdr,
  .fasdl,
  .fasdt,
  .fatl,
  .fa-thumbprint,
  .fands,
  .fa-notdog-duo,
  .fajdr,
  .fa-jelly-duo,
  .faudsb,
  .fa-utility-duo)::after {
    content: var(--fa);
  }
}
.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: calc(10 / 16 * 1em); /* converts a 10px size into an em-based value that's relative to the scale's 16px base */
  line-height: calc(1 / 10 * 1em); /* sets the line-height of the icon back to that of it's parent */
  vertical-align: calc((6 / 10 - 0.375) * 1em); /* vertically centers the icon taking into account the surrounding text's descender */
}

.fa-xs {
  font-size: calc(12 / 16 * 1em); /* converts a 12px size into an em-based value that's relative to the scale's 16px base */
  line-height: calc(1 / 12 * 1em); /* sets the line-height of the icon back to that of it's parent */
  vertical-align: calc((6 / 12 - 0.375) * 1em); /* vertically centers the icon taking into account the surrounding text's descender */
}

.fa-sm {
  font-size: calc(14 / 16 * 1em); /* converts a 14px size into an em-based value that's relative to the scale's 16px base */
  line-height: calc(1 / 14 * 1em); /* sets the line-height of the icon back to that of it's parent */
  vertical-align: calc((6 / 14 - 0.375) * 1em); /* vertically centers the icon taking into account the surrounding text's descender */
}

.fa-lg {
  font-size: calc(20 / 16 * 1em); /* converts a 20px size into an em-based value that's relative to the scale's 16px base */
  line-height: calc(1 / 20 * 1em); /* sets the line-height of the icon back to that of it's parent */
  vertical-align: calc((6 / 20 - 0.375) * 1em); /* vertically centers the icon taking into account the surrounding text's descender */
}

.fa-xl {
  font-size: calc(24 / 16 * 1em); /* converts a 24px size into an em-based value that's relative to the scale's 16px base */
  line-height: calc(1 / 24 * 1em); /* sets the line-height of the icon back to that of it's parent */
  vertical-align: calc((6 / 24 - 0.375) * 1em); /* vertically centers the icon taking into account the surrounding text's descender */
}

.fa-2xl {
  font-size: calc(32 / 16 * 1em); /* converts a 32px size into an em-based value that's relative to the scale's 16px base */
  line-height: calc(1 / 32 * 1em); /* sets the line-height of the icon back to that of it's parent */
  vertical-align: calc((6 / 32 - 0.375) * 1em); /* vertically centers the icon taking into account the surrounding text's descender */
}

.fa-width-auto {
  --fa-width: auto;
}

.fa-fw,
.fa-width-fixed {
  --fa-width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-inline-start: var(--fa-li-margin, 2.5em);
  padding-inline-start: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  inset-inline-start: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

/* Heads Up: Bordered Icons will not be supported in the future!
  - This feature will be deprecated in the next major release of Font Awesome (v8)!
  - You may continue to use it in this version *v7), but it will not be supported in Font Awesome v8.
*/
/* Notes:
* --@{v.$css-prefix}-border-width = 1/16 by default (to render as ~1px based on a 16px default font-size)
* --@{v.$css-prefix}-border-padding =
  ** 3/16 for vertical padding (to give ~2px of vertical whitespace around an icon considering it's vertical alignment)
  ** 4/16 for horizontal padding (to give ~4px of horizontal whitespace around an icon)
*/
.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.0625em);
  box-sizing: var(--fa-border-box-sizing, content-box);
  padding: var(--fa-border-padding, 0.1875em 0.25em);
}

.fa-pull-left,
.fa-pull-start {
  float: inline-start;
  margin-inline-end: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right,
.fa-pull-end {
  float: inline-end;
  margin-inline-start: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
  .fa-bounce,
  .fa-fade,
  .fa-beat-fade,
  .fa-flip,
  .fa-pulse,
  .fa-shake,
  .fa-spin,
  .fa-spin-pulse {
    animation: none !important;
    transition: none !important;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  height: 2em;
  line-height: 2em;
  position: relative;
  vertical-align: middle;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  --fa-width: 100%;
  inset: 0;
  position: absolute;
  text-align: center;
  width: var(--fa-width);
  z-index: var(--fa-stack-z-index, auto);
}

.fa-stack-1x {
  line-height: inherit;
}

.fa-stack-2x {
  font-size: 2em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */
.fa-adjust { --fa: "\f042"; }
.fa-bars { --fa: "\f0c9"; }
.fa-circle-half-stroke { --fa: "\f042"; }
.fa-envelope { --fa: "\f0e0"; }
.fa-mobile { --fa: "\f3ce"; }
.fa-mobile-android { --fa: "\f3ce"; }
.fa-mobile-phone { --fa: "\f3ce"; }
.fa-navicon { --fa: "\f0c9"; }
.fa-paper-plane { --fa: "\f1d8"; }

:root, :host {
  --fa-family-brands: 'Font Awesome 7 Brands';
  --fa-font-brands: normal 400 1em/1 var(--fa-family-brands); }

@font-face {
  font-family: 'Font Awesome 7 Brands';
  font-style: normal;
  font-weight: 400;
  font-display: block;
  src: url("../webfonts/fa-brands-400.woff2") format("woff2"); }

.fab,
.fa-brands,
.fa-classic.fa-brands {
  --fa-family: var(--fa-family-brands);
  --fa-style: 400;
}

.fa-instagram { --fa: "\f16d"; }
.fa-linkedin { --fa: "\f08c"; }
.fa-whatsapp { --fa: "\f232"; }

:root, :host {
  --fa-family-duotone: "Font Awesome 7 Duotone";
  --fa-font-duotone: normal 900 1em/1 var(--fa-family-duotone);
  /* deprecated: this older custom property will be removed next major release */
  --fa-style-family-duotone: var(--fa-family-duotone);
}

@font-face {
  font-family: "Font Awesome 7 Duotone";
  font-style: normal;
  font-weight: 900;
  font-display: block;
  src: url("../webfonts/fa-duotone-900.woff2");
}
.fad,
.fa-duotone {
  --fa-family: var(--fa-family-duotone);
  --fa-style: 900;
  position: relative;
  letter-spacing: normal;
}

.fad::before,
.fa-duotone::before {
  position: absolute;
  color: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.fad::after,
.fa-duotone::after {
  color: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.fa-swap-opacity .fad::before,
.fa-swap-opacity .fa-duotone::before,
.fad.fa-swap-opacity::before,
.fa-duotone.fa-swap-opacity::before {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.fa-swap-opacity .fad::after,
.fa-swap-opacity .fa-duotone::after,
.fad.fa-swap-opacity::after,
.fa-duotone.fa-swap-opacity::after {
  opacity: var(--fa-primary-opacity, 1);
}

.fad.fa-li,
.fa-duotone.fa-li,
.fad.fa-stack-1x,
.fa-duotone.fa-stack-1x,
.fad.fa-stack-2x,
.fa-duotone.fa-stack-2x {
  position: absolute;
}
:root, :host {
  --fa-family-sharp-duotone: "Font Awesome 7 Sharp Duotone";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 var(--fa-family-sharp-duotone);
  /* deprecated: this older custom property will be removed next major release */
  --fa-style-family-sharp-duotone: var(--fa-family-sharp-duotone);
}

@font-face {
  font-family: "Font Awesome 7 Sharp Duotone";
  font-style: normal;
  font-weight: 900;
  font-display: block;
  src: url("../webfonts/fa-sharp-duotone-solid-900.woff2");
}
.fasds {
  --fa-family: var(--fa-family-sharp-duotone);
  --fa-style: 900;
  position: relative;
  letter-spacing: normal;
}

.fa-sharp-duotone {
  --fa-family: var(--fa-family-sharp-duotone);
  position: relative;
  letter-spacing: normal;
}

.fa-solid {
  --fa-style: 900;
}

.fasds::before,
.fa-sharp-duotone::before {
  position: absolute;
  color: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.fasds::after,
.fa-sharp-duotone::after {
  color: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.fa-swap-opacity .fasds::before,
.fa-swap-opacity .fa-sharp-duotone::before,
.fa-swap-opacity.fasds::before,
.fa-swap-opacity.fa-sharp-duotone::before {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.fa-swap-opacity .fasds::after,
.fa-swap-opacity .fa-sharp-duotone::after,
.fa-swap-opacity.fasds::after,
.fa-swap-opacity.fa-sharp-duotone::after {
  opacity: var(--fa-primary-opacity, 1);
}

.fa-li.fasds,
.fa-li.fa-sharp-duotone,
.fa-stack-1x.fasds,
.fa-stack-1x.fa-sharp-duotone,
.fa-stack-2x.fasds,
.fa-stack-2x.fa-sharp-duotone {
  position: absolute;
}
